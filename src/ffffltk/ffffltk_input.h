// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef ffffltk_input_h
#define ffffltk_input_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Input.H>

/**
   a non-modal input dialog for ffffltk
*/

namespace ffffltk
{
class nonmodal_input {
public:
    /**
       function for other widgets to call this dialog
    */
    Fl_Double_Window* show(float cur_val, char* units, void(*set_val_callback)(float)) {
      { winder = new Fl_Double_Window(376, 99, "Set Exact Value");
        winder->user_data((void*)(this));
        { Fl_Button* o = new Fl_Button(199, 60, 75, 25, "OK");
          o->callback((Fl_Callback*)cb_OK);
        } // Fl_Button* o
        { Fl_Button* o = new Fl_Button(286, 60, 75, 25, "Cancel");
          o->callback((Fl_Callback*)cb_Cancel);
        } // Fl_Button* o
        { inpoot = new Fl_Input(110, 20, 250, 30, "Enter Value:");
        } // Fl_Input* inpoot
        winder->end();
        winder->show();
      } // Fl_Double_Window* winder
      char n[20];
      sprintf(n,"%f",cur_val);
      inpoot->value(n);
      if(units)
        inpoot->label(units);
      callback = set_val_callback;
      return winder;
    }

  Fl_Double_Window *winder;
  Fl_Input *inpoot;
  void (*callback)(float);//function pointer to set calling widget's value 

private:
//  void cb_OK_i(Fl_Button*, void*);
//  static void cb_OK(Fl_Button*, void*);
//  void cb_Cancel_i(Fl_Button*, void*);
//  static void cb_Cancel(Fl_Button*, void*);
    void cb_OK_i(Fl_Button*, void* v) {
      if(sscanf(winder->inpoot->value(),"%f"))
        {
          callback(v);
        };
    }
    void cb_OK(Fl_Button* o, void* v) {
      ((nonmodal_input*)(o->parent()->user_data()))->cb_OK_i(o,v);
    }

    void cb_Cancel_i(Fl_Button*, void*) {
      winder->hide();
    }
    void cb_Cancel(Fl_Button* o, void* v) {
      ((nonmodal_input*)(o->parent()->user_data()))->cb_Cancel_i(o,v);
    }


};
}//ffffltk
#endif
